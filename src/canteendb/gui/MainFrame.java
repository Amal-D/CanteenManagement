/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package canteendb.gui;

import canteendb.db.beans.StaffDetailsBean;
import canteendb.db.mngmt.UserManagement;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author project
 */
public class MainFrame extends javax.swing.JFrame {


    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        CloseMain = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        register = new javax.swing.JMenu();
        Login = new javax.swing.JMenuItem();
        billing = new javax.swing.JMenuItem();
        Exit = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        AddStaff = new javax.swing.JMenuItem();
        viewstaff = new javax.swing.JMenuItem();
        foodjMenu6 = new javax.swing.JMenu();
        availablefood = new javax.swing.JMenuItem();
        rawmaterial = new javax.swing.JMenu();
        Rawstock = new javax.swing.JMenuItem();
        purchase = new javax.swing.JMenu();
        PurchaseDetails = new javax.swing.JMenuItem();
        income = new javax.swing.JMenu();
        dailyincome = new javax.swing.JMenuItem();
        monthlyincome = new javax.swing.JMenuItem();

        jMenu1.setText("jMenu1");

        jMenu3.setText("File");
        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");
        jMenuBar2.add(jMenu4);

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        CloseMain.setText("Close");
        CloseMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseMainActionPerformed(evt);
            }
        });

        register.setText("Menu");

        Login.setText("Login");
        Login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginActionPerformed(evt);
            }
        });
        register.add(Login);

        billing.setText("Billing");
        billing.setEnabled(false);
        billing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                billingActionPerformed(evt);
            }
        });
        register.add(billing);

        Exit.setText("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        register.add(Exit);

        jMenuBar1.add(register);
        jMenuBar1.add(jMenu5);

        jMenu2.setText("Staff Management");

        AddStaff.setText("Add Staff");
        AddStaff.setEnabled(false);
        AddStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddStaffActionPerformed(evt);
            }
        });
        jMenu2.add(AddStaff);

        viewstaff.setText("View Staff");
        viewstaff.setEnabled(false);
        viewstaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewstaffActionPerformed(evt);
            }
        });
        jMenu2.add(viewstaff);

        jMenuBar1.add(jMenu2);

        foodjMenu6.setText("Food Items");

        availablefood.setText("Available Items");
        availablefood.setEnabled(false);
        availablefood.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                availablefoodActionPerformed(evt);
            }
        });
        foodjMenu6.add(availablefood);

        jMenuBar1.add(foodjMenu6);

        rawmaterial.setText("Raw Materials");

        Rawstock.setText("Stock");
        Rawstock.setEnabled(false);
        Rawstock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RawstockActionPerformed(evt);
            }
        });
        rawmaterial.add(Rawstock);

        jMenuBar1.add(rawmaterial);

        purchase.setText("Purchase Details");

        PurchaseDetails.setText("Purchase Details");
        PurchaseDetails.setEnabled(false);
        PurchaseDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PurchaseDetailsActionPerformed(evt);
            }
        });
        purchase.add(PurchaseDetails);

        jMenuBar1.add(purchase);

        income.setText("Income");

        dailyincome.setText("Daily Income");
        dailyincome.setEnabled(false);
        dailyincome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailyincomeActionPerformed(evt);
            }
        });
        income.add(dailyincome);

        monthlyincome.setText("Monthly Income");
        monthlyincome.setEnabled(false);
        income.add(monthlyincome);

        jMenuBar1.add(income);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(876, Short.MAX_VALUE)
                .addComponent(CloseMain)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(477, Short.MAX_VALUE)
                .addComponent(CloseMain)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_ExitActionPerformed

    private void AddStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddStaffActionPerformed
        AddStaff add = new AddStaff(this,true);
        add.setVisible(true);
        
// TODO add your handling code here:
    }//GEN-LAST:event_AddStaffActionPerformed

    private void LoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginActionPerformed
        // TODO add your handling code here:
        LoginJDialog loginJDialog = new LoginJDialog(this, true);
        loginJDialog.setLocationRelativeTo(this);
        loginJDialog.setVisible(true);
    }//GEN-LAST:event_LoginActionPerformed

    private void availablefoodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_availablefoodActionPerformed
        // TODO add your handling code here:
        AvailableItem available = new AvailableItem(this, true);
        available.setVisible(true);
    }//GEN-LAST:event_availablefoodActionPerformed

    private void RawstockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RawstockActionPerformed
        // TODO add your handling code here:
        Stock stock = new Stock(this,true);
        stock.setVisible(true);
    }//GEN-LAST:event_RawstockActionPerformed

    private void viewstaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewstaffActionPerformed
        // TODO add your handling code here:
        ViewStaff view = new ViewStaff(this, true);
        view.setVisible(true);
    }//GEN-LAST:event_viewstaffActionPerformed

    private void CloseMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseMainActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_CloseMainActionPerformed

    private void PurchaseDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PurchaseDetailsActionPerformed
        // TODO add your handling code here:
        PurchasedItem purchasedItem = new PurchasedItem(this,true);
        purchasedItem.setVisible(true);
    }//GEN-LAST:event_PurchaseDetailsActionPerformed

    private void dailyincomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailyincomeActionPerformed
        // TODO add your handling code here:
        DailyIncome dailyIncome = new DailyIncome(this,true);
        dailyIncome.setVisible(true);
                System.out.print("test");

    }//GEN-LAST:event_dailyincomeActionPerformed

    private void billingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_billingActionPerformed
        // TODO add your handling code here:
          billingui billing = new billingui(this,true);
        billing.setVisible(true);
    }//GEN-LAST:event_billingActionPerformed

    
    
              

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AddStaff;
    private javax.swing.JButton CloseMain;
    private javax.swing.JMenuItem Exit;
    private javax.swing.JMenuItem Login;
    private javax.swing.JMenuItem PurchaseDetails;
    private javax.swing.JMenuItem Rawstock;
    private javax.swing.JMenuItem availablefood;
    private javax.swing.JMenuItem billing;
    private javax.swing.JMenuItem dailyincome;
    private javax.swing.JMenu foodjMenu6;
    private javax.swing.JMenu income;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem monthlyincome;
    private javax.swing.JMenu purchase;
    private javax.swing.JMenu rawmaterial;
    private javax.swing.JMenu register;
    private javax.swing.JMenuItem viewstaff;
    // End of variables declaration//GEN-END:variables

 /*public void loadStaffDetails() {
        try {
            UserManagement management = new UserManagement();
            ArrayList<StaffDetailsBean> detailsBeans = management.getAllUsers();
            DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
            tableModel.getDataVector().clear();
            for (int i = 0; i < detailsBeans.size(); i++) {
                StaffDetailsBean detailsBean = detailsBeans.get(i);
                Object[] row = {i + 1, detailsBean.getName(), detailsBean.getPhno()};
                tableModel.addRow(row);
            }
            jTable1.updateUI();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }*/
    public void enableComp(String userType) {
        if(userType.equalsIgnoreCase("A")) {
            AddStaff.setEnabled(true);
            viewstaff.setEnabled(true);
            availablefood.setEnabled(true);
            Rawstock.setEnabled(true);
            PurchaseDetails.setEnabled(true);
            dailyincome.setEnabled(true);
            billing.setEnabled(true);
            
           }
        if(userType.equalsIgnoreCase("PurchaseManager")) {
            PurchaseDetails.setEnabled(true);
         }
        if(userType.equalsIgnoreCase("Cashier")) {
            billing.setEnabled(true);
        }
    }
    
    
        

}

